{"version":3,"sources":["constants/statuses.js","store/initial-state.js","store/actions/action-types.js","store/reduser.js","store/index.js","components/button.jsx","views/start-game-screen.jsx","constants/questions.js","components/reply-button.jsx","components/rate-score.jsx","components/score.jsx","helpars/get-letter-by-index.js","store/actions/index.js","store/actions/change-status.js","store/actions/go-next-step.js","store/actions/set-game-over.js","helpars/get-rates-list.js","helpars/go-next-with-delay.js","views/game-screen.jsx","views/game-over-screen.jsx","components/playground-container.jsx","App.jsx","index.jsx","imag/hand.png"],"names":["initialState","status","step","score","reduser","state","action","type","actionTypes","payload","statuses","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Button","text","changeStatus","className","onClick","StartGame","onStart","src","hand","alt","questions","value","answers","ReplyButton","letter","viewBox","fill","xmlns","d","x","y","RateScore","isActive","passed","activeClassName","width","height","Score","ratesList","currentStep","map","rate","index","key","getLetterByIndex","id","String","fromCharCode","goNextStep","setGameOver","getRatesList","reduce","accum","currentValue","length","push","toLocaleString","maximumFractionDigits","goNextWithDelay","target","moveFunc","classList","add","setTimeout","remove","connect","currentQuestion","dispatch","changeStep","gameOver","useState","mobileScoreVisible","setVisibility","useMemo","handleAnswer","useCallback","isTrue","currentTarget","currentScore","itm","indx","e","GameOver","startGame","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iOAAe,EAEJ,UAFI,EAGL,SCKKA,EANM,CACnBC,ODFO,QCGPC,KAAM,EACNC,MAAO,G,OCLM,EACE,gBADF,EAEF,YAFE,EAGF,YC2BEC,EA3BC,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACtC,OAAQA,EAAOC,MACb,KAAKC,EACH,OAAO,eACFH,EADL,CAEEJ,OAAQK,EAAOG,QAAQR,SAG3B,KAAKO,EACH,OAAO,eACFH,EADL,CAEEH,KAAMG,EAAMH,KAAO,IAGvB,KAAKM,EACH,OAAO,eACFH,EADL,CAEEJ,OAAQS,EACRR,KAAM,EACNC,MAAOG,EAAOG,QAAQN,QAG1B,QACE,OAAOE,ICfEM,EAPDC,YACZR,EACAJ,EAEAa,OAAOC,8BAAgCD,OAAOC,gC,gBCAjCC,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAT,OACb,4BAAQV,KAAK,SAASW,UAAU,cAAcC,QAASF,GACpDD,ICgBUI,EAhBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAChB,yBAAKH,UAAU,gBACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,0BACb,yBAAKI,IAAKC,IAAMC,IAAI,SAEtB,yBAAKN,UAAU,8BACb,wBAAIA,UAAU,uBAAd,qCACA,yBAAKA,UAAU,6BACb,kBAAC,EAAD,CAAQF,KAAK,QAAQC,aAAcI,S,wBC2Q9BI,EAxRG,CAChB,CACET,KAAM,0NACNU,MAAO,IAEPC,QAAS,CACP,CACEX,KAAM,0DACNU,OAAO,GAET,CACEV,KAAM,iCACNU,OAAO,GAET,CACEV,KAAM,yDACNU,OAAO,GAET,CACEV,KAAM,mDACNU,OAAO,KAIb,CACEV,KAAM,yFACNU,MAAO,IAEPC,QAAS,CACP,CACEX,KAAM,iCACNU,OAAO,GAET,CACEV,KAAM,mDACNU,OAAO,GAET,CACEV,KAAM,uCACNU,OAAO,GAET,CACEV,KAAM,gEACNU,OAAO,KAIb,CACEV,KACE,kZACFU,MAAO,IAEPC,QAAS,CACP,CACEX,KAAM,iCACNU,OAAO,GAET,CACEV,KAAM,2BACNU,OAAO,GAET,CACEV,KAAM,qBACNU,OAAO,GAET,CACEV,KAAM,uCACNU,OAAO,KAIb,CACEV,KAAM,mWACNU,MAAO,IAEPC,QAAS,CACP,CACEX,KAAM,mDACNU,OAAO,GAET,CACEV,KAAM,yDACNU,OAAO,GAET,CACEV,KAAM,6CACNU,OAAO,GAET,CACEV,KAAM,mDACNU,OAAO,KAIb,CACEV,KAAM,6JACNU,MAAO,IAEPC,QAAS,CACP,CACEX,KAAM,2BACNU,OAAO,GAET,CACEV,KAAM,gEACNU,OAAO,GAET,CACEV,KAAM,mDACNU,OAAO,GAET,CACEV,KAAM,0DACNU,OAAO,KAIb,CACEV,KAAM,0FACNU,MAAO,IAEPC,QAAS,CACP,CACEX,KAAM,4EACNU,OAAO,GAET,CACEV,KAAM,sEACNU,OAAO,GAET,CACEV,KAAM,sEACNU,OAAO,GAET,CACEV,KAAM,gEACNU,OAAO,KAIb,CACEV,KAAM,mRACNU,MAAO,KAEPC,QAAS,CACP,CACEX,KAAM,4EACNU,OAAO,GAET,CACEV,KAAM,sEACNU,OAAO,GAET,CACEV,KAAM,0DACNU,OAAO,GAET,CACEV,KAAM,8FACNU,OAAO,KAIb,CACEV,KAAM,wHACNU,MAAO,KAEPC,QAAS,CACP,CACEX,KAAM,iCACNU,OAAO,GAET,CACEV,KAAM,6CACNU,OAAO,GAET,CACEV,KAAM,6CACNU,OAAO,GAET,CACEV,KAAM,iCACNU,OAAO,KAIb,CACEV,KAAM,4NACNU,MAAO,KAEPC,QAAS,CACP,CACEX,KAAM,gHACNU,OAAO,GAET,CACEV,KAAM,iCACNU,OAAO,GAET,CACEV,KAAM,iCACNU,OAAO,GAET,CACEV,KAAM,+DACNU,OAAO,KAIb,CACEV,KAAM,+RACNU,MAAO,MAEPC,QAAS,CACP,CACEX,KAAM,KACNU,OAAO,GAET,CACEV,KAAM,KACNU,OAAO,GAET,CACEV,KAAM,KACNU,OAAO,GAET,CACEV,KAAM,IACNU,OAAO,KAIb,CACEV,KAAM,wMACNU,MAAO,KAEPC,QAAS,CACP,CACEX,KAAM,iCACNU,OAAO,GAET,CACEV,KAAM,4EACNU,OAAO,GAET,CACEV,KAA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","file":"static/js/main.c9254feb.chunk.js","sourcesContent":["export default {\n  START: 'START',\n  PLAYING: 'PLAYING',\n  FINISH: 'FINISH',\n};\n","import statuses from '../constants/statuses';\n\nconst initialState = {\n  status: statuses.START,\n  step: 0,\n  score: 0,\n};\n\nexport default initialState;\n","export default {\n  CHANGE_STATUS: 'CHANGE_STATUS',\n  NEXT_STEP: 'NEXT_STEP',\n  GAME_OVER: 'GAME_OVER',\n};\n","import actionTypes from './actions/action-types';\nimport statuses from '../constants/statuses';\n\nconst reduser = (state = {}, action) => {\n  switch (action.type) {\n    case actionTypes.CHANGE_STATUS:\n      return {\n        ...state,\n        status: action.payload.status,\n      };\n\n    case actionTypes.NEXT_STEP:\n      return {\n        ...state,\n        step: state.step + 1,\n      };\n\n    case actionTypes.GAME_OVER:\n      return {\n        ...state,\n        status: statuses.FINISH,\n        step: 0,\n        score: action.payload.score,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reduser;\n","import { createStore } from 'redux';\nimport initialState from './initial-state';\nimport reduser from './reduser';\n\nconst store = createStore(\n  reduser,\n  initialState,\n  // eslint-disable-next-line no-underscore-dangle\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;\n","import React from 'react';\n\nconst Button = ({ text, changeStatus }) => (\n  <button type=\"button\" className=\"main-button\" onClick={changeStatus}>\n    {text}\n  </button>\n);\n\nexport default Button;\n","import React from 'react';\nimport hand from '../imag/hand.png';\nimport Button from '../components/button';\n\nconst StartGame = ({ onStart }) => (\n  <div className=\"start-screen\">\n    <div className=\"start-screen__wrap\">\n      <div className=\"start-screen__img-wrap\">\n        <img src={hand} alt=\"img\" />\n      </div>\n      <div className=\"start-screen__content-wrap\">\n        <h1 className=\"start-screen__title\">Who wants to be aÂ millionaire?</h1>\n        <div className=\"start-screen__button-wrap\">\n          <Button text=\"Start\" changeStatus={onStart} />\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default StartGame;\n","const questions = [\n  {\n    text: 'ÐÐ¶Ð°ÐºÐ°ÑÑÐ° ÑÐ²Ð»ÑÐµÑÑÑ ÑÑÐ¾Ð»Ð¸ÑÐµÐ¹ ÐºÐ°ÐºÐ¾Ð¹ ÑÑÑÐ°Ð½Ñ?',\n    value: 500,\n\n    answers: [\n      {\n        text: ' ÐÐ½Ð´Ð¾Ð½ÐµÐ·Ð¸Ñ',\n        value: true,\n      },\n      {\n        text: 'ÐÐ½Ð´Ð¸Ñ',\n        value: false,\n      },\n      {\n        text: 'ÐÐµÐ½ÐµÑÑÑÐ»Ð°',\n        value: false,\n      },\n      {\n        text: 'ÐÐ²ÑÑÐ°Ð»Ð¸Ñ',\n        value: false,\n      },\n    ],\n  },\n  {\n    text: 'Ð¡ÑÐ¾Ð»Ð¸ÑÐ° Ð­ÑÐ¸Ð¾Ð¿Ð¸Ð¸?',\n    value: 500,\n\n    answers: [\n      {\n        text: 'ÐÐºÐºÑÐ°',\n        value: false,\n      },\n      {\n        text: 'ÐÐ¾Ð³Ð°Ð´Ð¸ÑÐ¾',\n        value: false,\n      },\n      {\n        text: 'ÐÐ¾ÑÐºÐ²Ð°',\n        value: true,\n      },\n      {\n        text: 'ÐÐ´Ð´Ð¸Ñ-ÐÐ±ÐµÐ±Ð°',\n        value: true,\n      },\n    ],\n  },\n  {\n    text:\n      'ÐÐ°ÐºÐ¾Ð¹ Ð½Ð°Ð¿Ð¸ÑÐ¾Ðº Ð¸Ð· Ð¿ÐµÑÐµÑÐ¸ÑÐ»ÐµÐ½Ð½ÑÑ Ð½Ð¸Ð¶Ðµ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÑÑÑÑ Ð´Ð»Ñ Ð¸Ð·Ð³Ð¾ÑÐ¾Ð²Ð»ÐµÐ½Ð¸Ñ ÐÐ°Ð¹ÐºÐ¸ÑÐ¸?',\n    value: 1000,\n\n    answers: [\n      {\n        text: 'ÐÐ¸ÑÐºÐ¸',\n        value: false,\n      },\n      {\n        text: 'ÐÐ¶Ð¸Ð½',\n        value: true,\n      },\n      {\n        text: 'Ð Ð¾Ð¼',\n        value: true,\n      },\n      {\n        text: 'ÐÐ¾Ð½ÑÑÐº',\n        value: false,\n      },\n    ],\n  },\n  {\n    text: 'ÐÐ°ÐºÐ°Ñ Ð¸Ð· ÑÑÐ¸Ñ ÑÐµÐ¼ÐµÐ¹ Ð¿ÑÐµÐ´ÑÑÐ°Ð²Ð»ÐµÐ½Ð° Ð² Ð¨ÐµÐºÑÐ¿Ð¸ÑÐ¾Ð²ÑÐºÐ¾Ð¹ Ð Ð¾Ð¼ÐµÐ¾ Ð¸ ÐÐ¶ÑÐ»ÑÐµÑÑÐµ?',\n    value: 2000,\n\n    answers: [\n      {\n        text: 'Ð Ð¾Ð¼Ð°Ð½Ð¾Ð²Ñ',\n        value: false,\n      },\n      {\n        text: 'ÐÐ°Ð¿ÑÐ»ÐµÑÑÐ¸',\n        value: true,\n      },\n      {\n        text: 'ÐÐ°Ð¼Ð±ÐµÐ»Ñ',\n        value: false,\n      },\n      {\n        text: 'Ð¡Ð¸Ð´Ð¾ÑÐ¾Ð²Ñ',\n        value: false,\n      },\n    ],\n  },\n  {\n    text: 'ÐÐ°ÐºÐ¾Ð¹ ÑÑÐ¾Ð»ÑÑ ÑÐ¾Ð·Ð´Ð°Ð» ÐÐ¸Ð½Ð¾ÐºÐºÐ¸Ð¾?',\n    value: 4000,\n\n    answers: [\n      {\n        text: 'ÐÐµÐ¿Ðµ',\n        value: false,\n      },\n      {\n        text: 'Ð§Ð°ÑÐ»Ð¸ ÐÑÐ°ÑÐ½',\n        value: false,\n      },\n      {\n        text: 'ÐÐ¶ÐµÐ¿ÐµÑÑÐ¾',\n        value: true,\n      },\n      {\n        text: 'ÐÐ°Ð¿Ð° ÐÐ°ÑÐ»Ð¾',\n        value: false,\n      },\n    ],\n  },\n  {\n    text: 'ÐÑÐ¾ ÑÐ°ÐºÐ¾Ð¹ ÐÐ°Ð¼Ð»ÐµÑ?',\n    value: 8000,\n\n    answers: [\n      {\n        text: 'ÐÐ¾ÑÐ¾Ð»Ñ Ð¨Ð²ÐµÑÐ¸Ð¸',\n        value: false,\n      },\n      {\n        text: 'ÐÐ¾ÑÐ¾Ð»Ñ ÐÐ°Ð½Ð¸Ð¸',\n        value: false,\n      },\n      {\n        text: 'ÐÑÐ¸Ð½Ñ Ð¨Ð²ÐµÑÐ¸Ð¸',\n        value: false,\n      },\n      {\n        text: 'ÐÑÐ¸Ð½Ñ ÐÐ°Ð½Ð¸Ð¸',\n        value: true,\n      },\n    ],\n  },\n  {\n    text: 'ÐÑÐ¾ Ð¾ÑÐºÑÑÐ» Ð³ÑÐ°Ð²Ð¸ÑÐ°ÑÐ¸Ñ, ÐºÐ¾Ð³Ð´Ð° ÑÐ²Ð¸Ð´ÐµÐ» Ð¿Ð°Ð´Ð°ÑÑÐµÐµ ÑÐ±Ð»Ð¾ÐºÐ¾?',\n    value: 16000,\n\n    answers: [\n      {\n        text: 'Ð§Ð°ÑÐ»ÑÐ· ÐÐ°ÑÐ²Ð¸Ð½',\n        value: false,\n      },\n      {\n        text: 'ÐÑÐ°Ð°Ðº ÐÑÑÑÐ¾Ð½',\n        value: true,\n      },\n      {\n        text: 'ÐÐ°ÑÐ¸Ñ ÐÑÑÐ¸',\n        value: false,\n      },\n      {\n        text: 'ÐÐ»ÑÐ±ÐµÑÑ Ð­Ð¹Ð½ÑÑÐµÐ¹Ð½',\n        value: false,\n      },\n    ],\n  },\n  {\n    text: 'ÐÐ´Ðµ Ð½Ð°ÑÐ¾Ð´Ð¸ÑÑÑ ÐÐ¾Ð¼Ð±Ð°ÑÐ°?',\n    value: 32000,\n\n    answers: [\n      {\n        text: 'ÐÐµÐ½Ð¸Ñ',\n        value: true,\n      },\n      {\n        text: 'Ð­ÑÐ¸Ð¾Ð¿Ð¸Ñ',\n        value: false,\n      },\n      {\n        text: 'ÐÐ°ÑÐ¾ÐºÐºÐ¾',\n        value: false,\n      },\n      {\n        text: 'ÐÐ½Ð´Ð¸Ñ',\n        value: false,\n      },\n    ],\n  },\n  {\n    text: 'Ð ÐºÐ°ÐºÐ¾Ð¼ Ð²Ð¸Ð´Ðµ ÑÐ¿Ð¾ÑÑÐ° Ð¿ÑÐ¾ÑÐ»Ð°Ð²Ð¸Ð»ÑÑ Ð¢Ð¾Ð¼ ÐÑÑÐ´Ð¸?',\n    value: 61000,\n\n    answers: [\n      {\n        text: 'ÐÐ¼ÐµÑÐ¸ÐºÐ°Ð½ÑÐºÐ¸Ð¹ Ð¤ÑÑÐ±Ð¾Ð»',\n        value: true,\n      },\n      {\n        text: 'Ð ÐµÐ³Ð±Ð¸',\n        value: false,\n      },\n      {\n        text: 'Ð ÐµÐ³Ð³Ð¸',\n        value: false,\n      },\n      {\n        text: 'ÐÐ°ÑÐµÐ¼Ð°ÑÐ¸ÐºÐ°',\n        value: false,\n      },\n    ],\n  },\n  {\n    text: 'Ð¡ÐºÐ¾Ð»ÑÐºÐ¾ ÐºÑÐ°ÑÐ½ÑÑ Ð¸ Ð±ÐµÐ»ÑÑ Ð¿Ð¾Ð»Ð¾ÑÐ¾Ðº Ð½Ð° Ð°Ð¼ÐµÑÐ¸ÐºÐ°Ð½ÑÐºÐ¾Ð¼ ÑÐ»Ð°Ð³Ðµ?',\n    value: 125000,\n\n    answers: [\n      {\n        text: '15',\n        value: false,\n      },\n      {\n        text: '20',\n        value: false,\n      },\n      {\n        text: '13',\n        value: true,\n      },\n      {\n        text: '3',\n        value: false,\n      },\n    ],\n  },\n  {\n    text: 'ÐÑÐµÐ²Ð½Ð¸Ðµ Ð¿Ð¸ÑÐ°Ð½Ð¸Ñ Ð¸Ð½Ð´ÑÐ¸Ð·Ð¼Ð° Ð½Ð°Ð¿Ð¸ÑÐ°Ð½Ñ Ð½Ð°:',\n    value: 250000,\n\n    answers: [\n      {\n        text: 'ÐÐ²ÑÐ¸Ñ',\n        value: false,\n      },\n      {\n        text: 'ÐÑÐ°Ð±ÑÐºÐ¸Ð¹ ÑÐ·ÑÐº',\n        value: false,\n      },\n      {\n        text: 'Ð¡Ð°Ð½ÑÐºÑÐ¸Ñ',\n        value: true,\n      },\n      {\n        text: 'ÐÐµÑÑÐ¸Ð´ÑÐºÐ¸Ð¹',\n        value: false,\n      },\n    ],\n  },\n  {\n    text: 'Ð¡ÑÐµÑÑÐ°-ÐÐµÐ¾Ð½Ðµ - ÑÑÑÐ°Ð½Ð° Ð²:',\n    value: 500000,\n\n    answers: [\n      {\n        text: 'ÐÐ¼ÐµÑÐ¸ÐºÐµ',\n        value: false,\n      },\n      {\n        text: 'ÐÐ·Ð¸Ð¸',\n        value: false,\n      },\n      {\n        text: 'ÐÑÑÐ¸ÐºÐµ',\n        value: true,\n      },\n      {\n        text: 'ÐÐ²ÑÐ¾Ð¿Ðµ',\n        value: false,\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import React from 'react';\n\nconst ReplyButton = ({ letter, text, onClick, value }) => (\n  <button type=\"button\" className=\"reply-button\">\n    <svg\n      onClick={onClick}\n      viewBox=\"0 0 405 72\"\n      className=\"reply-button__wrap\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      value={value}\n    >\n      <path\n        d=\"M38.7172 5.28344C40.8781 2.28016 44.3521 0.5 48.052 0.5H356.948C360.648 0.5 364.122 2.28016 366.283 5.28344L388.384 36L366.283 66.7166C364.122 69.7198 360.648 71.5 356.948 71.5H48.052C44.3521 71.5 40.8781 69.7198 38.7172 66.7166L16.616 36L38.7172 5.28344Z\"\n        fill=\"white\"\n        className=\"reply-border reply-overlay\"\n      />\n      <path d=\"M388 36H405\" className=\"reply-border\" />\n      <path d=\"M0 36H17\" className=\"reply-border\" />\n      <text fill=\"#FF8B37\" className=\"reply-letter\">\n        <tspan x=\"45.7637\" y=\"43.7727\">\n          {letter}\n        </tspan>\n      </text>\n      <text fill=\"#1C1C21\" className=\"reply-text\">\n        <tspan x=\"71\" y=\"43.7727\">\n          {text}\n        </tspan>\n      </text>\n    </svg>\n  </button>\n);\n\nexport default ReplyButton;\n","import React from 'react';\n\nconst RateScore = ({ text, isActive, passed }) => {\n  const activeClassName = isActive ? 'rate-score--active' : '';\n\n  return (\n    <svg\n      width=\"376\"\n      height=\"40\"\n      viewBox=\"0 0 376 40\"\n      className={`rate-score ${activeClassName}`}\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M69 20H0\" className=\"rate-score__border\" />\n      <path d=\"M376 20H307\" className=\"rate-score__border\" />\n      <path\n        d=\"M81.4526 4.63788C83.6376 2.01596 86.8742 0.5 90.2872 0.5H285.713C289.126 0.5 292.362 2.01597 294.547 4.63788L307.349 20L294.547 35.3621C292.362 37.984 289.126 39.5 285.713 39.5H90.2872C86.8742 39.5 83.6376 37.984 81.4526 35.3621L68.6509 20L81.4526 4.63788Z\"\n        fill=\"white\"\n        className=\"rate-score__border\"\n      />\n\n      <text fill={!passed ? '#000000' : '#d0d0d8'} className=\"rate-score__text\">\n        <tspan x=\"149.777\" y=\"26.7727\">\n          {text}\n        </tspan>\n      </text>\n    </svg>\n  );\n};\n\nexport default RateScore;\n","import React from 'react';\nimport RateScore from './rate-score';\n\nfunction Score({ ratesList, currentStep }) {\n  return (\n    <div className=\"score\">\n      <div className=\"score__wrap\">\n        {ratesList.map((rate, index) => (\n          <div className=\"score__wrap-svg\" key={rate}>\n            <RateScore\n              text={`$${rate}`}\n              isActive={currentStep === index}\n              passed={currentStep > index}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Score;\n","const getLetterByIndex = (id) => String.fromCharCode(65 + id);\n\nexport default getLetterByIndex;\n","import changeStatus from './change-status';\nimport goNextStep from './go-next-step';\nimport setGameOver from './set-game-over';\n\nexport default {\n  changeStatus,\n  goNextStep,\n  setGameOver,\n};\n","import actionTypes from './action-types';\n\nconst changeStatus = (status) => ({\n  type: actionTypes.CHANGE_STATUS,\n  payload: {\n    status,\n  },\n});\n\nexport default changeStatus;\n","import actionTypes from './action-types';\n\nconst goNextStep = () => ({\n  type: actionTypes.NEXT_STEP,\n});\n\nexport default goNextStep;\n","import actionTypes from './action-types';\n\nconst setGameOver = (score) => ({\n  type: actionTypes.GAME_OVER,\n  payload: {\n    score,\n  },\n});\n\nexport default setGameOver;\n","const getRatesList = (questions) => {\n  const numbersRatesList = questions.reduce((accum, { value }) => {\n    const currentValue = !accum.length\n      ? value\n      : accum[accum.length - 1] + value;\n    accum.push(currentValue);\n    return accum;\n  }, []);\n\n  return numbersRatesList.map((rate) => rate.toLocaleString('en-US', {\n    maximumFractionDigits: 2,\n  }));\n};\n\nexport default getRatesList;\n","// TODO ! move in helpers\nconst goNextWithDelay = (target, className, moveFunc) => {\n  target.classList.add(className);\n  setTimeout(() => {\n    if (target) target.classList.remove(className);\n    moveFunc();\n  }, 1500);\n};\n\nexport default goNextWithDelay;\n","import React, { useState, useCallback, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport { FaBars, FaTimes } from 'react-icons/fa';\nimport questions from '../constants/questions';\nimport ReplyButton from '../components/reply-button';\nimport Score from '../components/score';\nimport getLetterByIndex from '../helpars/get-letter-by-index';\nimport action from '../store/actions';\nimport getRatesList from '../helpars/get-rates-list';\nimport goNextWithDelay from '../helpars/go-next-with-delay';\n\nconst Game = ({ gameOver, changeStep, step, currentQuestion }) => {\n  const [mobileScoreVisible, setVisibility] = useState(false);\n\n  const ratesList = useMemo(() => getRatesList(questions), []);\n\n  const handleAnswer = useCallback(\n    ({ currentTarget }, isTrue) => {\n      if (!isTrue) {\n        const rates = [0, ...ratesList];\n        const currentScore = rates[step];\n        goNextWithDelay(currentTarget, 'invalid', () => gameOver(currentScore));\n        return;\n      }\n\n      const isLastStep = step === questions.length - 1;\n\n      if (isLastStep) {\n        goNextWithDelay(currentTarget, 'valid', () =>\n          gameOver(ratesList[step]),\n        );\n      } else {\n        goNextWithDelay(currentTarget, 'valid', changeStep);\n      }\n    },\n    [changeStep, ratesList, gameOver, step],\n  );\n\n  const mobileScoreIsVisible = () => {\n    if (mobileScoreVisible) {\n      setVisibility(false);\n    } else {\n      setVisibility(true);\n    }\n  };\n\n  return (\n    <div className=\"game-screen\">\n      <div className=\"game-screen__content\">\n        <div className=\"game-screen__question\">\n          <h1 className=\"game-screen__title\">{currentQuestion.text}</h1>\n        </div>\n\n        <div className=\"game-screen__answers\">\n          {currentQuestion.answers.map((itm, indx) => (\n            <div className=\"game-screen__answers-wrap\" key={indx}>\n              <ReplyButton\n                letter={getLetterByIndex(indx)}\n                text={itm.text}\n                onClick={(e) => handleAnswer(e, itm.value)}\n                value={itm.value}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n      <div>\n        <button\n          type=\"button\"\n          className=\"score-visible\"\n          onClick={mobileScoreIsVisible}\n        >\n          {mobileScoreVisible ? <FaTimes /> : <FaBars />}\n        </button>\n      </div>\n      <div\n        className={\n          mobileScoreVisible\n            ? 'game-screen__score active'\n            : 'game-screen__score'\n        }\n      >\n        <Score ratesList={ratesList} currentStep={step} />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ step }) => ({\n  currentQuestion: questions[step],\n  step,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeStep: () => {\n    dispatch(action.goNextStep());\n  },\n  gameOver: (score) => {\n    dispatch(action.setGameOver(score));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","import React from 'react';\nimport hand from '../imag/hand.png';\nimport Button from '../components/button';\n\nconst GameOver = ({ onStart, score }) => (\n  <div className=\"over-screen\">\n    <div className=\"over-screen__wrap\">\n      <div className=\"over-screen__img-wrap\">\n        <img src={hand} alt=\"img\" />\n      </div>\n      <div className=\"over-screen__content-wrap\">\n        <div className=\"over-screen__score\">Total score:</div>\n        <h1 className=\"over-screen__title\">{`$${score}`} earned</h1>\n        <div className=\"over-screen__button-wrap\">\n          <Button text=\"Try again\" changeStatus={onStart} />\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default GameOver;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport statuses from '../constants/statuses';\nimport StartGame from '../views/start-game-screen';\nimport Game from '../views/game-screen';\nimport GameOver from '../views/game-over-screen';\nimport action from '../store/actions';\n\nfunction PlaygroundContainer({ status, startGame, score }) {\n  if (status === statuses.PLAYING) {\n    return <Game />;\n  }\n  if (status === statuses.FINISH) {\n    return <GameOver onStart={startGame} score={score} />;\n  }\n\n  return <StartGame onStart={startGame} />;\n}\n\nconst mapStateToProps = ({ status, score }) => ({\n  status,\n  score,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  startGame: () => {\n    dispatch(action.changeStatus(statuses.PLAYING));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PlaygroundContainer);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport PlaygroundContainer from './components/playground-container';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PlaygroundContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","module.exports = __webpack_public_path__ + \"static/media/hand.f8c75481.png\";"],"sourceRoot":""}